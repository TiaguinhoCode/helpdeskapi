// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id            String     @id @default(uuid())
  name          String
  email         String     @unique
  password      String
  photo         String?
  department_id String
  department    Department @relation(fields: [department_id], references: [id])
  Host          Host[]
  Ticket        Ticket[]

  @@map("users")
}

model Department {
  id     String @id @default(uuid())
  sector String
  user   User[]

  @@map("departments")
}

model Host {
  id         String   @id @default(uuid())
  host       String
  processor  String
  ram_memory String
  hdd        Boolean?
  sdd        Boolean?
  storage    String
  system     String
  switch     String?
  user_id    String
  user       User     @relation(fields: [user_id], references: [id])
  Ticket     Ticket[]

  @@map("hosts")
}

model Ticket {
  id                  String    @id @default(uuid())
  problem_description String
  photo_problem       String?
  oppening_date       DateTime? @default(now())
  service_date        DateTime?
  closing_date        DateTime?
  user_id             String
  status_id           String
  priority_id         String?
  host_id             String
  technician          String?
  resolution_id       String?

  user       User       @relation(fields: [user_id], references: [id])
  status     Status     @relation(fields: [status_id], references: [id], name: "TicketStatus")
  host       Host       @relation(fields: [host_id], references: [id])
  priority   Priority?   @relation(fields: [priority_id], references: [id], name: "PriorityStatus")
  resolution Resolution? @relation(fields: [resolution_id], references: [id], name: "ResolutionStatus")

  @@map("ticket")
}

model Status {
  id     String @id @default(uuid())
  status String

  tickets Ticket[] @relation(name: "TicketStatus")

  @@map("status")
}

model Priority {
  id             String @id @default(uuid())
  priority_level String

  tickets Ticket[] @relation(name: "PriorityStatus")

  @@map("priority")
}

model Resolution {
  id               String  @id @default(uuid())
  description      String
  resolution_photo String?

  tickets Ticket[] @relation(name: "ResolutionStatus")

  @@map("resolution")
}
